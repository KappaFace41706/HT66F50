include HT66F50.inc

ds .section 'data'
COUNT  DB     ?
NUM    DB     ?
DEL1 DB  ?
DEL2 DB  ?
DEL3 DB  ?
keep   DB     ?
keep1   DB   ?
AAA    DB     ?
BBB    DB    ?
CCC   DB    ?
DDD   DB   ?
STACK_A DB ?
STACK_STATUS DB ?
TIME  DB  ?
UP_OR_DOWN  DB ? 
LOOK DB ?
cs .section at  000h 'code'
ORG 00H
JMP INIT
ORG 04H
JMP EXT_ISR
ORG 14h
JMP TM0_ISR

INIT:
 MOV A,00000000B
 MOV TM0C0,A
 MOV A,11000001B
 MOV TM0C1,A
 MOV A,LOW 1000
 MOV TM0AL,A
 MOV A,HIGH 1000
 MOV TM0AH,A
 SET T0AE
 SET MF0E
 SET EMI
 SET T0ON
 
 
 CLR ACERL
 MOV A,08H
 MOV CP0C,A
 MOV CP1C,A
 CLR PDC
 CLR PD
 CLR PCC
 CLR PC


 
 MOV A,0;
 MOV UP_OR_DOWN,A
 SET PAC.3
 SET PAPU.3
 
 MOV A,5
 MOV AAA,A
  MOV A,9
 MOV BBB,A
 MOV CCC,A
 MOV DDD,A
 MOV A,5
 MOV TIME,A
 
 MOV A,00000001B
 MOV INTEG,A
 SET INT0E
 SET EMI
 
 MOV A,0
 MOV UP_OR_DOWN,A


 JMP MAIN
 
 
MAIN:

 JMP $



ORG LASTPAGE
LED_ARRAY:
 DC 00111111B;0
 DC 00000110B;1
 DC 01011011B;2
 DC 01001111B;3

 DC 01100110B;4
 DC 01101101B;5
 DC 01111101B;6
 DC 00100111B;7
   
 DC 01111111B;8
 DC 01101111B;9
 DC 01110111B;A
 DC 01111100B;b
 
 DC 01011000B;c
 DC 01011110B;d
 DC 01111001B;E
 DC 01110001B;F
 DC 00000000B;·t
 
EXT_ISR:
CALL DELAY2
MOV STACK_A,A
MOV A,STATUS
MOV STACK_STATUS,A

INC AAA
MOV A,246
ADD A,AAA
SZ C
JMP CLR_AAA

RETT_AAA:

MOV A,STACK_STATUS
MOV STATUS,A
MOV A,STACK_A
CLR INT0F
RETI

CLR_AAA:
       CLR AAA
       INC BBB
       MOV A,246
	   ADD A,BBB
       SZ C
       JMP CLR_BBB
       

       
JMP RETT_AAA


CLR_BBB:
	CLR BBB
	INC CCC
	MOV A,246
	ADD A,CCC
    SZ C
    JMP CLR_CCC

JMP RETT_AAA

CLR_CCC:
	CLR CCC
	INC DDD
	MOV A,246
	ADD A,DDD
    SZ C
    CLR DDD

JMP RETT_AAA




TM0_ISR:
 MOV STACK_A,A
 MOV A,STATUS
 MOV STACK_STATUS,A
 CLR T0AF
 MOV A,40
 MOV keep1,A
 
 SDZ TIME
 JMP TM0_ISR1
RE1:
 MOV A,11111110B
 MOV PD,A
 
 
 MOV A,AAA
 MOV TBLP,A
 TABRDL PC
 CALL DELAY
 CLR PC
 RL  PD
 
 
 MOV A,BBB
 MOV TBLP,A
 TABRDL PC
 CALL DELAY
 CLR PC
 RL  PD
 
 MOV A,CCC
 MOV TBLP,A
 TABRDL PC
 CALL DELAY
 CLR PC
 RL  PD
 
 MOV A,DDD
 MOV TBLP,A
 TABRDL PC
 CALL DELAY
 CLR PC
 RL  PD
 
; SDZ keep1
 ;JMP RE1
 MOV A,1
 MOV TIME,A
TM0_ISR1:
 MOV A,STACK_STATUS
 MOV STATUS,A
 MOV A,STACK_A
RETI



  
DELAY PROC
  MOV  A,1
  MOV  DEL1,A
DEL_1:
  MOV  A,1
  MOV  DEL2,A
DEL_2:
  MOV  A,255
  MOV  DEL3,A
DEL_3:
  SDZ  DEL3
  JMP  DEL_3
  SDZ  DEL2
  JMP  DEL_2
  SDZ  DEL1
  JMP  DEL_1
  RET
DELAY  ENDP
  
DELAY2 PROC
  MOV  A,1
  MOV  DEL1,A
DEL_11:
  MOV  A,10
  MOV  DEL2,A
DEL_22:
  MOV  A,242
  MOV  DEL3,A
DEL_33:
  SDZ  DEL3
  JMP  DEL_33
  SDZ  DEL2
  JMP  DEL_22
  SDZ  DEL1
  JMP  DEL_11
  RET
DELAY2  ENDP